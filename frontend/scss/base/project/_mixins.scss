@mixin breakpoint($min: 0, $max: 0) {

  $type: type-of($min);

  @if $type==string {

    $class: $min;

    @if $class==xs {
      @media screen and (max-width: $bp-xs) {
        @content;
      }
    }

    @else if $class==sm {
      @media screen and (min-width: $bp-sm) {
        @content;
      }
    }

    @else if $class==md {
      @media screen and (min-width: $bp-md) {
        @content;
      }
    }

    @else if $class==lg {
      @media screen and (min-width: $bp-lg) {
        @content;
      }
    }

    @else if $class==xl {
      @media screen and (min-width: $bp-xl) {
        @content;
      }
    }

    @else {
      @warn "Unknown breakpoint, use : xs, sm, md, lg, xl";
    }

  }
  @else if $type==number {

    $content: "all" !default;

    @if $min !=0 and $max !=0 {
      $content: "(min-width: #{$min}) and (max-width: #{$max})";
    }

    @else if $min !=0 and $max==0 {
      $content: "(min-width: #{$min})";
    }

    @else if $min==0 and $max !=0 {
      $content: "(max-width: #{$max})";
    }

    @media screen and #{$content} {
      @content;
    }

  }
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
    display: $display;
    position: $pos;
    content: $content;
    @content;
}

@mixin triangle($color, $direction: up, $size: 6px, $position: absolute, $round: false) {
    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction==down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5);
    }
    @else if $direction==up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5);
    }
    @else if $direction==right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    }
    @else if $direction==left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin hidden {
    visibility: hidden;
    @include opacity(0);
}

@mixin visible  {
    visibility: visible;
    @include opacity(1);
}

@mixin clearfix {
    *zoom: 1;
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}